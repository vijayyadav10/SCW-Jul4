{"version":3,"sources":["en.js","it.js","helper/Constant.js","helper/Helper.js","ui/SimpleTable.js","api/Api.js","page/Config.js","helper/AccordionHelper.js","ui/ContentDetailModal.js","page/SingleContentList.js","App.js","custom-element/et-single-app.js"],"names":["PERPAGEOPTIONS","SELECT_COLLECTION_TYPE","id","SELECT","NAME","CREATEDBY","lastEdited","CREATEDDATE","T_HEADING","BTN_ADD_NEW_CONTENT","KC_TOKEN_PREFIX","UNIVERSAL_DATE_FORMAT","STRAPI_IMAGE_EXTENSIONS","STRAPI_IMAGE_URL_KEY","STRAPI_EXCLUDE_KEYS","ACCORDION_FONT_SIZE","NO_DATA_AVAILABLE_MSG","getKey","content","keys","Object","index","findIndex","item","toLowerCase","allowedKeys","filter","includes","length","SimpleTable","props","renderToggleButton","isMenuShown","onClick","type","style","position","height","top","right","border","e","preventDefault","className","onChangeTemplateId","setTemplateId","target","value","state","templateType","selectedTemplateType","contentAttribute","map","idx","this","selectedContent","createdBy","firstname","lastname","moment","Date","updatedAt","format","publishedAt","name","defaultValue","selectedTemplateId","onChange","message","disabled","hidden","templateList","el","templateName","React","Component","Title","createdAt","createDate","selectDefaultTemplate","domain","process","templateBaseUrl","rootAdminEndPoint","localeUrl","sortByCreateDateByDescOrder","STRAPI_TOKEN","getCollectionTypes","a","axios","get","addAuthorizationRequestConfig","data","getContents","collectionType","page","pageSize","url","getContentById","contentName","contentId","console","error","getLocales","getContentDetailsByCollectionTypeAndId","filterContentsByName","query","searchBy","Error","getTemplate","collectionTypeUrl","getDefaultOptions","defaultBearer","token","window","entando","keycloak","authenticated","localStorage","getItem","headers","Authorization","config","defaultOptions","strapiDomain","Config","componentDidMount","contentTypes","obj","uid","startsWith","isDisplayed","contentTypeRefine","forEach","element","push","label","info","pluralName","collType","parsedCollType","JSON","parse","selectedContentId","templatesList","setState","collectionTypes","fetchContentById","event","handleTypeaheadChangeContentType","selected","selectedContentType","option","handleAddNewContent","strapiContentManagerUrl","newWindow","open","focus","nameTwo","bind","xs","title","role","to","bsStyle","marginTop","panelGroupId","renderPanelGroup","PanelGroup","accordion","marginBottom","isImageObject","renderPanel","key","ignoreProps","keyToShow","dataToShow","isAnArray","Number","checkIfComponent","toString","dataObj","arr","split","indexOf","replace","Array","isArray","theKey","theIndex","Panel","eventKey","renderPanelHeading","isObject","renderPanelBody","Heading","renderPanelTitleToggle","renderPanelTitle","Grid","Row","display","fontSize","Col","width","marginLeft","wordBreak","isKey0To9","charAt","toUpperCase","slice","paddingRight","lineHeight","renderAccordionData","toggle","Body","collapsible","undefined","endsWithAnyImageExtension","src","alt","isDate","dateString","endsWith","string","suffix","object","ContentDetailModal","toggleTab","dataToShowOnModal","localizations","getCollectionByLocaleName","currentCode","setActiveTabKey","getLocaleInfo","localeInfo","code","contentDettailsResponse","dataToShowOnModalRestTabs","componentDidUpdate","prevProps","prevState","show","mockRows","selectedCollectionType","collectionAttributes","dummyData","dialogClassName","onHide","Header","fetchTitleOrName","tabIndex","activeKey","activeTabKey","onSelect","locale","getLocaleFullName","overflowY","overflowX","locTabs","i","Footer","SingleContentList","initSingleContentListPage","componentWillUnmount","shouldShowEtSaveBtn","searchBtnClk","pageInput","currPageWillUpdating","doContentSearch","btnVisibility","document","getElementsByClassName","visibility","filterUidByApiPrefix","collectionTypeData","contentDetailsOnModal","contentIdForModal","close","handleCollectionTypeChange","searchByKey","contents","getContentsByCollectionType","setSelectedContentName","contentData","seletedContentData","results","find","lastPage","pagination","pageCount","totalItems","total","setPage","isNaN","totalPages","newPaginationState","assign","pageChangeValue","onContentSearch","searchQuery","searchResult","handleStateOnTermSearch","handleQueryChange","onPerPageSelect","onPageInput","onSubmit","radioButton","defaultChecked","onPageNavigation","changePageValue","changePage","saveHandler","setContent","setCollectionType","setSearchBy","setCollectionTypeState","collectionTypeApiData","displayName","singularName","perPage","perPageOptions","itemsStart","itemsEnd","Math","min","saveConfig","lg","placeholder","intl","formatMessage","emptyLabel","options","toggleMenu","margin","align","itemCount","viewType","amountOfPages","pageInputValue","onPageSet","onFirstPage","onPreviousPage","onNextPage","onLastPage","messages","sm","injectIntl","App","setLocale","selectedContentName","tempId","stringify","currLocale","decideLocale","en","it","path","exact","SingleWidgetElement","reactRootRef","createRef","mountPoint","oldValue","newValue","ReactDOM","render","ref","current","createElement","appendChild","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.c007811c.chunk.js","sourcesContent":["export default {\n    'app.content': 'Content',\n    'app.info': 'Info',\n    'app.name': 'Name',\n    'app.created': 'Created by',\n    'app.createdDate': 'Created date',\n    'app.selectDefaultTemplate': 'Select default template*',\n    'app.addExistingContent': 'Add existing content',\n    'app.addNewContent': 'Add new content',\n    'app.selectContent': 'Select Content',\n    'app.select': 'Select',\n    'app.selectCollection': 'Select Collection Type',\n    'app.chooseAnOption': 'Choose an option',\n    'app.widgetConfiguration': 'Widget Configuration',\n    'app.queryFilter': 'Query Filter',\n    'app.cancel': 'Cancel',\n    'app.saveAsQuery': 'Save as Query',\n    'app.saveAsListOfContents': 'Save as list of Contents',\n    'app.search': 'Search',\n    'app.lastEdited': 'Last edited',\n    'app.result': 'Result',\n    'app.remove': 'Remove',\n    'app.query': 'Query',\n    'app.selectTemplate': 'Select Template',\n    'app.save': 'Save',\n    'app.edit': 'Edit content',\n    'app.noMatchesFound': 'No matches found',\n    'app.noDataAvailable': 'No data available',\n    'app.firstPage': 'First Page',\n    'app.previousPage': 'Previous Page',\n    'app.currentPage': 'Current Page',\n    'app.nextPage': 'Next Page',\n    'app.lastPage': 'Last Page',\n    'app.perPage': 'per page',\n    'app.of': 'of',\n    'app.ok':'Ok'\n}","export default {\n    'app.content': 'Contenuto',\n    'app.info': 'Informazioni',\n    'app.name': 'Nome',\n    'app.created': 'Creata da',\n    'app.createdDate': 'Data di Creazione',\n    'app.selectDefaultTemplate': 'Seleziona il modello predefinito*',\n    'app.addExistingContent': 'Aggiungi contenuto esistente',\n    'app.addNewContent': 'Aggiungi nuovo contenuto',\n    'app.selectContent': 'Seleziona Contenuto',\n    'app.select': 'Selezionare',\n    'app.selectCollection': 'Seleziona Tipo di raccolta',\n    'app.chooseAnOption': `Scegliere un'opzione`,\n    'app.widgetConfiguration': 'Widget Configuration',\n    'app.queryFilter': 'Filtro di query',\n    'app.cancel': 'Annulla',\n    'app.saveAsQuery': 'Salva come query',\n    'app.saveAsListOfContents': 'Salva come elenco di contenuti',\n    'app.search': 'Ricerca',\n    'app.lastEdited': 'Ultima modifica',\n    'app.result': 'Risultato',\n    'app.remove': 'Rimuovere',\n    'app.query': 'Domanda',\n    'app.selectTemplate': 'Seleziona Modello',\n    'app.save': 'Salva',\n    'app.edit': 'Modifica contenutoe',\n    'app.noMatchesFound': 'Nessun risultato trovato',\n    'app.noDataAvailable': 'Nessun dato disponibile',\n    'app.firstPage': 'Prima pagina',\n    'app.previousPage': 'Pagina precedente',\n    'app.currentPage': 'Pagina corrente',\n    'app.nextPage': 'Pagina successiva',\n    'app.lastPage': 'Ultima pagina',\n    'app.perPage': 'per pagina',\n    'app.of': 'di',\n    'app.ok':'Ok'\n\n}","import {  FormattedMessage } from \"react-intl\";\n/*********************\n * PAGINATION ********\n *********************/\n\nexport const PERPAGEOPTIONS = [5, 10, 15, 25, 50];\nexport const PAGE = 1;\nexport const PAGESIZE = 5;\nexport const TOTALITEMS = 20;\nexport const LASTPAGE = 4;\nexport const PAGEINPUT = 1;\nexport const PAGECHANGEVALUE = 1;\n\n/*********************\n * UI CONSTANT *******\n *********************/\nexport const SEARCH_CONTENT_BY_NAME = \"Search Content By Name...\";\nexport const SELECT_COLLECTION_TYPE = <FormattedMessage id='app.selectCollection' />  \n\n/*********************\n * UI LABEL **********\n *********************/\n export const SELECT = <FormattedMessage id='app.select' />                                    //\n export const NAME = <FormattedMessage id='app.name' />\n export const CREATEDBY = <FormattedMessage id='app.created' />\n export const lastEdited = <FormattedMessage id='app.lastEdited' />\n export const CREATEDDATE = <FormattedMessage id='app.createdDate' />\n\nexport const T_HEADING = {\n    SELECT: SELECT,\n    NAME: NAME,\n    CREATEDBY: CREATEDBY,\n    lastEdited: lastEdited,\n    CREATEDDATE: CREATEDDATE,\n}\n\n//export const BTN_ADD_NEW_CONTENT = '';\nexport const BTN_ADD_NEW_CONTENT = <FormattedMessage id='app.addNewContent' />;\n\n/*********************\n * For Strapi API ****\n *********************/\nexport const KC_TOKEN_PREFIX = 'EntKcToken';\n\n/*********************\n * For Strapi API ****\n *********************/\nexport const UNIVERSAL_DATE_FORMAT = \"YYYY-MM-DD HH:mm:ss\"\n\n/*********************\n * For Strapi Images ****\n *********************/\n export const IMAGE_EXT = [\n    \".ase\",\n    \".art\",\n    \".bmp\",\n    \".blp\",\n    \".cd5\",\n    \".cit\",\n    \".cpt\",\n    \".cr2\",\n    \".cut\",\n    \".dds\",\n    \".dib\",\n    \".djvu\",\n    \".egt\",\n    \".exif\",\n    \".gif\",\n    \".gpl\",\n    \".grf\",\n    \".icns\",\n    \".ico\",\n    \".iff\",\n    \".jng\",\n    \".jpeg\",\n    \".jpg\",\n    \".jfif\",\n    \".jp2\",\n    \".jps\",\n    \".lbm\",\n    \".max\",\n    \".miff\",\n    \".mng\",\n    \".msp\",\n    \".nef\",\n    \".nitf\",\n    \".ota\",\n    \".pbm\",\n    \".pc1\",\n    \".pc2\",\n    \".pc3\",\n    \".pcf\",\n    \".pcx\",\n    \".pdn\",\n    \".pgm\",\n    \".PI1\",\n    \".PI2\",\n    \".PI3\",\n    \".pict\",\n    \".pct\",\n    \".pnm\",\n    \".pns\",\n    \".ppm\",\n    \".psb\",\n    \".psd\",\n    \".pdd\",\n    \".psp\",\n    \".px\",\n    \".pxm\",\n    \".pxr\",\n    \".qfx\",\n    \".raw\",\n    \".rle\",\n    \".sct\",\n    \".sgi\",\n    \".rgb\",\n    \".int\",\n    \".bw\",\n    \".tga\",\n    \".tiff\",\n    \".tif\",\n    \".vtf\",\n    \".xbm\",\n    \".xcf\",\n    \".xpm\",\n    \".3dv\",\n    \".amf\",\n    \".ai\",\n    \".awg\",\n    \".cgm\",\n    \".cdr\",\n    \".cmx\",\n    \".dxf\",\n    \".e2d\",\n    \".egt\",\n    \".eps\",\n    \".fs\",\n    \".gbr\",\n    \".odg\",\n    \".svg\",\n    \".stl\",\n    \".vrml\",\n    \".x3d\",\n    \".sxd\",\n    \".v2d\",\n    \".vnd\",\n    \".wmf\",\n    \".emf\",\n    \".art\",\n    \".xar\",\n    \".png\",\n    \".webp\",\n    \".jxr\",\n    \".hdp\",\n    \".wdp\",\n    \".cur\",\n    \".ecw\",\n    \".iff\",\n    \".lbm\",\n    \".liff\",\n    \".nrrd\",\n    \".pam\",\n    \".pcx\",\n    \".pgf\",\n    \".sgi\",\n    \".rgb\",\n    \".rgba\",\n    \".bw\",\n    \".int\",\n    \".inta\",\n    \".sid\",\n    \".ras\",\n    \".sun\",\n    \".tga\",\n    \".heic\",\n    \".heif\"\n];\n\nexport const STRAPI_IMAGE_EXTENSIONS = ['.JPEG', '.JPG', '.PNG', '.GIF', '.SVG', '.TIFF', '.ICO', '.DVU'];\nexport const STRAPI_IMAGE_URL_KEY = 'url';\nexport const STRAPI_IMAGE_HEIGHT = '50px';\nexport const STRAPI_IMAGE_WIDTH = '50px';\nexport const STRAPI_EXCLUDE_KEYS = [\"createdAt\", \"updatedAt\", \"publishedAt\", \"createdBy\", \"updatedBy\", \"id\", \"localizations\", \"locale\"];\nexport const ACCORDION_FONT_SIZE = \"13px\";\nexport const NO_DATA_AVAILABLE_MSG = <FormattedMessage id='app.noDataAvailable' />","import { STRAPI_EXCLUDE_KEYS } from \"./Constant\";\n\n/**\n * Value to show under Name colum in the table.\n * Checks if name or title key is present, if yes, fetches its value or fetches any other key's value by excluding some specific keys.\n * @param {*} content\n * @returns\n */\nexport const getKey = (content) => {\n    if (content) {\n        const keys = Object.keys(content);\n        let index = keys.findIndex(item => 'title' === item.toLowerCase());\n        if (index > -1) {\n            return Object.keys(content)[index];\n            // return content[Object.keys(content)[index]];\n        } else {\n            index = keys.findIndex(item => 'name' === item.toLowerCase());\n            if (index > -1) {\n                return Object.keys(content)[index];\n                // return content[Object.keys(content)[index]];\n            } else {\n                const allowedKeys = keys.filter(item => !STRAPI_EXCLUDE_KEYS.includes(item));\n                if (allowedKeys && allowedKeys.length) {\n                    return allowedKeys[0];\n                    // return content[allowedKeys[0]];\n                }\n            }\n        }\n    }\n    // const searchByKey = '';\n    return '-';\n}\nexport const PAGINATION_MESSAGES = (props) => ({\n    \"firstPage\": props.intl.formatMessage({ id: \"app.firstPage\" }),\n    \"previousPage\": props.intl.formatMessage({ id: \"app.previousPage\" }),\n    \"currentPage\": props.intl.formatMessage({ id: \"app.currentPage\" }),\n    \"nextPage\": props.intl.formatMessage({ id: \"app.nextPage\" }),\n    \"lastPage\": props.intl.formatMessage({ id: \"app.lastPage\" }),\n    \"perPage\": props.intl.formatMessage({ id: \"app.perPage\" }),\n    \"of\": props.intl.formatMessage({ id: \"app.of\" })\n});\n\nexport const parseData = (data) => data.length > 0 ? JSON.parse(data) : data;","import React from \"react\";\nimport moment from 'moment';\nimport { UNIVERSAL_DATE_FORMAT } from \"../helper/Constant\";\nimport {  FormattedMessage } from \"react-intl\";\nimport { getKey } from \"../helper/Helper\";\n\nexport class SimpleTable extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // DATA STATE\n            templateType: [{'label': 'vj'}],\n            selectedTemplateType: [],\n        }\n    }\n\n    /**\n       * Renders Button on Typehead.\n       * @returns Button element\n       */\n    renderToggleButton = ({ isMenuShown, onClick }) => (\n        <button\n            type=\"button\"\n            style={{ position: \"absolute\", height: \"100%\", top: \"0px\", right: \"0px\", border: \"1px solid lightgray\" }}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n        ><span className=\"fa fa-angle-down\"></span></button>\n    );\n\n    onChangeTemplateId = (e) => {\n        this.props.setTemplateId(e.target.value);\n    }\n\n    render() {\n        return (\n            <>\n                <table className=\"table table-bordered table-datatable table-hover table-striped Contents__table-element\">\n                    <thead>\n                        <tr>\n                            {Object.keys(contentAttribute).map((item, idx) => <th key={idx}><FormattedMessage id={contentAttribute[item]} /></th>)}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.props.selectedContent.length > 0 && (\n                                this.props.selectedContent.map(item => {\n                                    return (\n                                        <tr key={item.id}>\n                                            <td>{item[getKey(item)]}</td>\n                                            <td>{`${item.createdBy.firstname} ${item.createdBy.lastname}`}</td>\n                                            <td>{moment(new Date(item.updatedAt)).format(UNIVERSAL_DATE_FORMAT)}</td>\n                                            <td>{moment(new Date(item.publishedAt)).format(UNIVERSAL_DATE_FORMAT)}</td>\n                                            <td>\n                                                <select name=\"modelId\" defaultValue={this.props.selectedTemplateId === 'default' ?  'none' : this.props.selectedTemplateId} className=\"form-control\" onChange={this.onChangeTemplateId}>\n                                                    {<FormattedMessage id='app.selectTemplate' >\n                                                        {(message) => <option value='none' disabled hidden>{message}</option>}\n                                                    </FormattedMessage>}\n                                                    {this.props.templateList.map((el) => {\n                                                        return <option key={el.id} value={el.id}>{el.templateName}</option>;\n                                                    })}\n                                                </select>\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            )\n                        }\n                    </tbody>\n                </table>\n            </>\n        );\n\n    }\n}\n\n\nconst contentAttribute = {\n    Title: \"app.name\" ,\n    createdAt: \"app.created\",\n    updatedAt: \"app.lastEdited\",\n    createDate: \"app.createdDate\",\n    selectDefaultTemplate: \"app.selectDefaultTemplate\"\n    // restirctions: \"Restrictions\"\n}","import axios from 'axios';\nimport { KC_TOKEN_PREFIX, PAGE, PAGESIZE } from '../helper/Constant';\nconst domain = `${process.env.REACT_APP_STRAPI_API_URL}`;\nconst templateBaseUrl = `${process.env.REACT_APP_PUBLIC_API_URL}/template/`;\nconst rootAdminEndPoint = `${domain}/content-manager/collection-types/api::`;\nconst localeUrl = `${domain}/i18n/locales`\nconst sortByCreateDateByDescOrder = `&sort=createdAt:DESC`;\nconst STRAPI_TOKEN = {\n    'Authorization': `Bearer ${process.env.REACT_APP_LOCAL_STRAPI_TOKEN}`\n}\n\nexport const postLoginAdmin = async (data) => {\n    return axios.post(`${domain}/admin/login`, data);\n}\n\n// GET Collection Type\nexport const getCollectionTypes = async () => {\n    const { data } = await axios.get(`${domain}/content-manager/content-types`, addAuthorizationRequestConfig({}, KC_TOKEN_PREFIX));\n    return data;\n}\n\nexport const getContents = async (collectionType, page = PAGE, pageSize = PAGESIZE) => {\n    let url = `${rootAdminEndPoint}${collectionType}.${collectionType}?page=${page}&pageSize=${pageSize}${sortByCreateDateByDescOrder}`;\n    const { data } = await axios.get(url, addAuthorizationRequestConfig({}, KC_TOKEN_PREFIX));\n    return data;\n}\n\n/**\n * getContentById Search Content By Id.\n * @param {*} contentType\n * @param {*} contentId\n * @returns\n */\nexport const getContentById = async (contentName, contentId) => {\n    if (!contentName || !contentId) console.error(contentName, contentId);\n    const url = `${domain}/content-manager/collection-types/api::${contentName}.${contentName}/${contentId}`;\n    const { data } = await axios.get(url, addAuthorizationRequestConfig({}, KC_TOKEN_PREFIX))\n    return data;\n}\n\nexport const getCollectionLocaleWise = async (collectionType, localecode) => {\n    let url = `${rootAdminEndPoint}${collectionType}.${collectionType}?locale=${localecode}`;\n    const { data } = await axios.get(url, addAuthorizationRequestConfig({}, KC_TOKEN_PREFIX));\n    return data;\n}\n\n// API to get locales\nexport const getLocales = async () => {\n    let url = `${localeUrl}`;\n    const { data } = await axios.get(url, addAuthorizationRequestConfig({}, KC_TOKEN_PREFIX));\n    return data;\n}\n\nexport const fetchContents = async (collectionType) => {\n    // const url = `${domain}/api/${collectionType}`;\n    return await getContents(collectionType);\n}\n\nexport const getContentDetailsByCollectionTypeAndId = async (collectionType, contentId) => {\n    let url = `${rootAdminEndPoint}${collectionType}.${collectionType}/${contentId}`;\n    const { data } = await axios.get(url, addAuthorizationRequestConfig({}, KC_TOKEN_PREFIX));\n    return data;\n}\n\nexport const filterContentsByName = async (collectionType, query, searchBy, page = PAGE, pageSize = PAGESIZE) => {\n    if (!collectionType) {\n        throw new Error('collectionType is missing');\n    }\n    const url = `${rootAdminEndPoint}${collectionType}.${collectionType}?filters[${searchBy}][$containsi]=${query}&page=${page}&pageSize=${pageSize}`\n    const { data } = await axios.get(url, addAuthorizationRequestConfig({}, KC_TOKEN_PREFIX))\n    return data;\n}\n\n\n// API to list of templates Spring-Boot API\nexport const getTemplate = async (collectionType) => {\n    const collectionTypeUrl = collectionType ? `?collectionType=${collectionType}` : \"\";\n    const data = await axios.get(`${templateBaseUrl+collectionTypeUrl}`,addAuthorizationRequestConfig({}));\n    return data;\n}\n\nconst getKeycloakToken = () => {\n    // For testing purpose only\n    // return '';\n    if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\n        return window.entando.keycloak.token\n    } else {\n        return localStorage.getItem('token');\n    }\n}\n\nconst getDefaultOptions = (defaultBearer) => {\n    const token = getKeycloakToken()\n    if (!token) {\n        //Below if condition is to run the strapi API in local\n        if (defaultBearer === KC_TOKEN_PREFIX) {\n            return {\n                headers: STRAPI_TOKEN,\n            }\n        } else {\n            return {}\n        }\n    }\n    // logic to add token for both strapi and MS api\n    return {\n        headers: {\n            Authorization: `${defaultBearer} ${token}`,\n        },\n    }\n}\n\n// Get authorization tokens\nexport const addAuthorizationRequestConfig = (config = {}, defaultBearer = 'Bearer') => {\n    let defaultOptions = getDefaultOptions(defaultBearer);\n    return {\n        ...config,\n        ...defaultOptions\n    }\n}","import React, { Component } from 'react'\n\nimport {  FormattedMessage } from \"react-intl\";\nimport {\n    Row,\n    Col,\n    Button\n} from 'patternfly-react';\nimport { SimpleTable } from '../ui/SimpleTable';\nimport { getCollectionTypes, getContentById, getTemplate } from '../api/Api';\nimport { Link } from 'react-router-dom';\nimport { BTN_ADD_NEW_CONTENT } from '../helper/Constant';\nimport { parseData } from '../helper/Helper';\nconst strapiDomain = `${process.env.REACT_APP_STRAPI_TARGET_URL}`;\n\nexport default class Config extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedContent: [],\n            name: null,\n            nameTwo: null,\n            collectionTypes: [],\n            selectedContentId: 0,\n            selectedTemplateId: 'default',\n            templateList: []\n        };\n        this.handleAddNewContent = this.handleAddNewContent.bind(this);\n    }\n\n    componentDidMount = async () => {\n        let contentTypes = await getCollectionTypes();\n        contentTypes = contentTypes.data.filter(obj => {\n            return obj && (obj.uid && obj.uid.startsWith(\"api::\")) && obj.isDisplayed;\n        });\n        const contentTypeRefine = [];\n        contentTypes.length && contentTypes.forEach(element => {\n            contentTypeRefine.push({ label: element.info.pluralName })\n        });\n\n        const parsedCollType = parseData(this.props.collType);\n        if (parsedCollType.length && this.props.selectedContentId) {\n            let { data: templatesList } = await getTemplate(parsedCollType[0].value ? parsedCollType[0].value : '');\n            this.setState({ templateList: templatesList, collectionTypes: templatesList })\n            this.fetchContentById(parsedCollType[0].value, this.props.selectedContentId);\n        }\n    }\n\n    fetchContentById = async (collectionType, contentId) => {\n        const content = await getContentById(collectionType, contentId);\n        this.setState({ selectedContent: [content] })\n    }\n\n    onChangeTemplateId = (event) => {\n        this.setState({ selectedTemplateId: event.target.value })\n    }\n\n    handleTypeaheadChangeContentType = selected => {\n        let selectedContentType = selected.map(option => option.label);\n        this.setState({ templateList: selectedContentType });\n    };\n\n     /**\n     * Navigate to Strapi dashboard/login page in a new tab on browser\n     */\n      handleAddNewContent = () => {\n        let strapiContentManagerUrl = `${strapiDomain}/admin/content-manager`;\n        var newWindow = window.open(strapiContentManagerUrl, '_blank');\n        if(newWindow) {\n            newWindow.focus();\n        }\n    }\n\n    render() {\n        return (\n            <form className=\"form-horizontal SingleContentConfigForm well\">\n                <Row>\n                    <Col xs={12}>\n                        <div>\n                            <div>\n                                <span className=\"icon fa fa-puzzle-piece\" title=\"Widget\" />\n                                <h5 className=\"SingleContentConfigFormBody__widgetTitle\"><FormattedMessage id=\"app.content\" /></h5>\n                                <div className=\"SectionTitle SectionTitle__non-collapsable\" role=\"button\">\n                                <span> <FormattedMessage id=\"app.info\" /></span>\n                                </div>\n                                <div className=\"row\">\n                                    <Col xs={6}>\n                                        <h3 className=\"SingleContentConfigFormBody__contentTitle\">\n                                        <FormattedMessage id=\"app.content\" />: -\n                                        </h3>\n                                    </Col>\n                                    <Col xs={6} className=\"SingleContentConfigFormBody__addButtons\">\n                                        <Link to=\"/singleconfigpage\">\n                                            <Button bsStyle=\"primary\">\n                                                {this.state.selectedContent.length ? <FormattedMessage id=\"app.edit\" /> : <FormattedMessage id=\"app.addExistingContent\" />}\n                                            </Button>\n                                        </Link>\n                                        <Button className=\"AddContentTypeFormBody__save--btn\" bsStyle=\"primary\" onClick={this.handleAddNewContent}>\n                                            {BTN_ADD_NEW_CONTENT}\n                                        </Button>\n                                    </Col>\n                                </div>\n                                <div style={{ marginTop: \"1rem\" }}></div>\n                                <SimpleTable\n                                    setTemplateId={this.props.setTemplateId}\n                                    templateList={this.state.templateList}\n                                    content={this.state.selectedContent}\n                                    selectedContent={this.state.selectedContent}\n                                    selectedTemplateId={this.props.selectedTemplateId}\n                                />\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </form>\n        )\n    }\n}\n","import moment from 'moment';\nimport { Grid } from 'patternfly-react/dist/js/components/Grid';\nimport { Panel, PanelGroup } from 'react-bootstrap';\nimport { ACCORDION_FONT_SIZE, NO_DATA_AVAILABLE_MSG, STRAPI_EXCLUDE_KEYS, STRAPI_IMAGE_EXTENSIONS, STRAPI_IMAGE_HEIGHT, STRAPI_IMAGE_URL_KEY, STRAPI_IMAGE_WIDTH, UNIVERSAL_DATE_FORMAT } from './Constant';\n\nlet panelGroupId = 1;\n\nexport const renderPanelGroup = (data) => {\n    panelGroupId = panelGroupId + 1;\n    return (\n        <PanelGroup accordion id={panelGroupId} style={{ marginBottom: '5px' }}>\n            {data && Object.keys(data).length > 0\n                ?\n                isImageObject(data)\n                    ?\n                    renderPanel(STRAPI_IMAGE_URL_KEY, 0, data[STRAPI_IMAGE_URL_KEY])\n                    :\n                    Object.keys(data).filter(key => ignoreProps(key)).map((key, index) => {\n                        let keyToShow;\n                        let dataToShow;\n                        if (isAnArray(data) && key && (Number(key) || Number(key) === 0)) {\n                            if(data[key]) {\n                                keyToShow = checkIfComponent(data[key]);\n                                if(keyToShow && !Number(keyToShow)) {\n                                    dataToShow = {...data[key]};\n                                    delete dataToShow['__component'];\n                                } else {\n                                    keyToShow = key;\n                                    dataToShow = data[key];\n                                }\n                            }\n                            if (keyToShow && (Number(keyToShow) || Number(keyToShow) === 0)) {\n                                keyToShow = Number(keyToShow) + 1;\n                                keyToShow = keyToShow.toString();\n                            }\n                        } else {\n                            keyToShow = key;\n                            dataToShow = data[key];\n                        }\n                        return (renderPanel(keyToShow, index, dataToShow));\n                    })\n                :\n                <span>{NO_DATA_AVAILABLE_MSG}</span>}\n        </PanelGroup>\n    )\n}\n\nconst checkIfComponent = (dataObj) => {\n    if (dataObj) {\n        let keys = Object.keys(dataObj);\n        if (keys.includes('__component')) {\n            let arr = dataObj['__component'] && dataObj['__component'].split('.');\n            if (arr && arr.length > 0) {\n                if (arr[1] && arr[1].indexOf('-')) {\n                    return arr[1].replace('-', '_');\n                } else {\n                    return arr[1];\n                }\n            }\n        }\n    }\n}\n\nconst isAnArray = (data) => {\n    if (data) {\n        if (Array.isArray(data)) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n}\n\nconst renderPanel = (theKey, theIndex, data) => {\n    return (\n        <Panel eventKey={theIndex} key={theIndex}>\n            {renderPanelHeading(theKey, data)}\n            {\n                isObject(data)\n                &&\n                renderPanelBody(data, true)\n            }\n        </Panel>\n    )\n}\n\nconst renderPanelHeading = (theKey, data) => {\n    return (\n        <Panel.Heading>\n            {isObject(data) && !isImageObject(data)\n                ?\n                renderPanelTitleToggle(theKey)\n                :\n                renderPanelTitle(theKey, data)}\n        </Panel.Heading>\n    );\n}\n\nconst renderPanelTitle = (theKey, data) => {\n    return (\n        <Panel.Title>\n            <Grid.Row className=\"show-grid\" style={{ display: \"flex\", fontSize: ACCORDION_FONT_SIZE }}>\n                <Grid.Col style={{ width: \"10%\", marginLeft: '2.5rem', wordBreak: \"break-word\" }}>\n                    <div>\n                        <strong>\n                            {isImageObject(data) && isKey0To9(theKey)\n                            ?\n                            'Photo' + ' ' + theKey.charAt(0).toUpperCase() + theKey.slice(1)\n                            :\n                            theKey.charAt(0).toUpperCase() + theKey.slice(1)\n                            }\n                        </strong>\n                    </div>\n                </Grid.Col>\n                <Grid.Col style={{ width: \"90%\", marginLeft: '1rem', paddingRight: '2rem', lineHeight: '1.2' }}>\n                    {\n                    isImageObject(data)\n                    ?\n                    renderAccordionData(data[STRAPI_IMAGE_URL_KEY.toLowerCase()])\n                    :\n                    renderAccordionData(data)\n                    }\n                </Grid.Col>\n            </Grid.Row>\n        </Panel.Title>\n    );\n}\n\nconst renderPanelTitleToggle = (theKey) => {\n    return (\n        <Panel.Title toggle style={{marginLeft: \"-1rem\", fontSize: ACCORDION_FONT_SIZE }}>\n            <span><strong>{theKey.charAt(0).toUpperCase() + theKey.slice(1)}</strong></span>\n        </Panel.Title>\n    );\n}\n\nconst renderPanelBody = (data, isObject) => {\n    if (isObject) {\n        return (\n            <Panel.Body collapsible>\n                {renderPanelGroup(data)}\n            </Panel.Body>\n        )\n    } else {\n        return (\n            <Panel.Body collapsible>\n                <span>{data}</span>\n            </Panel.Body>\n        )\n    }\n}\n\nconst renderAccordionData = (data) => {\n    if (data === null || data === undefined) {\n        return <span> - </span>\n    } else if (typeof data === 'boolean') {\n        return <span>{data.toString()}</span>\n    } else if (typeof data === 'string') {\n        if (endsWithAnyImageExtension(data)) {\n            return <img src={process.env.REACT_APP_STRAPI_API_URL + data} width={STRAPI_IMAGE_WIDTH} height={STRAPI_IMAGE_HEIGHT} alt='image' />\n        } else if(isDate(data)) {\n            return <span>{moment(new Date(data)).format(UNIVERSAL_DATE_FORMAT)}</span>;\n        }\n        return <span style={{ wordBreak: 'break-word' }}>{data}</span>;\n    } else if (typeof data === 'number') {\n        return <span>{data}</span>;\n    } else if (typeof data === 'object') {\n        return data;\n    } else {\n        return <span> - </span>;\n    }\n}\n\nconst isDate = (dateString) => {\n    if(dateString) {\n        if(dateString && dateString.endsWith('Z') && dateString.length === 24 && dateString.split('T')[0].length === 10 && dateString.split('T')[1].length === 13) { //2016-11-16T04:30:00.000Z\n            return true;\n        }\n    }\n    return false;\n}\n\nconst endsWithAnyImageExtension = (string) => {\n    for (let suffix of STRAPI_IMAGE_EXTENSIONS)\n        if (string.toUpperCase().endsWith(suffix))\n            return true;\n    return false;\n}\n\nconst isObject = (data) => {\n    if (data) {\n        if (typeof data === 'object') {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n}\n\nconst isImageObject = (object) => {\n    let keys = object && Object.keys(object);\n    if (keys && keys.includes('ext') && keys.includes('formats') && keys.includes('url')) {\n        if (STRAPI_IMAGE_EXTENSIONS.includes(object['ext'].toUpperCase())) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst isKey0To9 = (key) => {\n    if (key && Number(key) && Number(key) >= 0) {\n        return true;\n    } return false;\n}\n\nconst ignoreProps = (key) => {\n    return !STRAPI_EXCLUDE_KEYS.includes(key);\n}","import { Button, Icon, Modal, Tab, Tabs } from 'patternfly-react';\nimport React, { Component } from 'react';\nimport { getCollectionLocaleWise, getContentDetailsByCollectionTypeAndId, getContentDetailsById, getLocales } from '../api/Api';\nimport { renderPanelGroup } from '../helper/AccordionHelper';\nimport {  FormattedMessage } from \"react-intl\";\n\nexport default class ContentDetailModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: true,\n            collectionTypes: [],\n            mockRows: [],\n            selectedContent: [],\n            selectedCollectionType: null,\n            collectionAttributes: this.props.dummyData,\n            dataToShowOnModal: {},\n            localeInfo:[],\n            currentCode: [this.props.contentId],\n            dataToShowOnModalRestTabs:{}\n          };\n        this.toggleTab = this.toggleTab.bind(this);\n        this.getCollectionByLocaleName = this.getCollectionByLocaleName.bind(this);\n    }\n\n    toggleTab = (index) => {\n        if (this.state.dataToShowOnModal.localizations && this.state.dataToShowOnModal.localizations.length > 0) {\n            this.getCollectionByLocaleName(this.state.currentCode[index]);\n        }\n        this.props.setActiveTabKey(index);\n    }\n\n    getLocaleInfo = async () => {\n        const data = await getLocales();\n        this.setState({ localeInfo: data });\n    }\n\n    getLocaleFullName(code) {\n        const filterItem = this.state.localeInfo.filter(item => item.code === code)\n        return filterItem[0].name;\n    }\n\n    componentDidMount = async() =>{\n        this.getLocaleInfo();\n    }\n\n    getCollectionByLocaleName = async (code) => {\n        const contentDettailsResponse = await getContentDetailsByCollectionTypeAndId(this.props.collectionType, code);\n        if (code === this.props.contentId)\n            this.setState({ dataToShowOnModal: { ...contentDettailsResponse } });\n        else {\n            this.setState({ dataToShowOnModalRestTabs: { ...contentDettailsResponse } });\n        }\n    }\n\n    componentDidUpdate = async (prevProps, prevState) => {\n      if (this.props.collectionType && this.props.contentId) {\n        if (prevProps.collectionType !== this.props.collectionType || prevProps.contentId !== this.props.contentId) {\n          const contentDettailsResponse = await getContentDetailsByCollectionTypeAndId(this.props.collectionType, this.props.contentId);\n          this.setState({ dataToShowOnModal: { ...contentDettailsResponse } });\n          this.setState({ dataToShowOnModalRestTabs: { ...contentDettailsResponse } });\n          this.props.setActiveTabKey(0);\n          this.setState({ currentCode: [this.props.contentId] })\n        }\n      }\n    }\n    \n    render() {\n        return (\n            <>\n                <Modal dialogClassName=\"ContentsFilterModal\" show={this.props.show} onHide={this.props.onHide} >\n                    <Modal.Header>\n                        <Modal.Title>{this.state.dataToShowOnModal && Object.keys(this.state.dataToShowOnModal).length > 0 && this.props.fetchTitleOrName(this.state.dataToShowOnModal)}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div\n                            className=\"CollapsibleSection__title no-padding\"\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                        </div>\n                        <div>\n                            <Tabs id={'id'} activeKey={this.props.activeTabKey} onSelect={this.toggleTab}>\n                                {this.state.dataToShowOnModal && this.state.dataToShowOnModal.locale ? <Tab eventKey={0} title={this.getLocaleFullName(this.state.dataToShowOnModal.locale).split(\" \")[0]} style={{ overflowY: \"auto\", height: \"38rem\", overflowX: \"hidden\" }}>\n                                    {renderPanelGroup(this.state.dataToShowOnModal)}\n                                </Tab> : <Tab eventKey={0} title=\"English\" style={{ overflowY: \"auto\", height: \"38rem\", overflowX: \"hidden\" }}>\n                                    {renderPanelGroup(this.state.dataToShowOnModal)}\n                                </Tab>}\n                                {this.state.dataToShowOnModal && this.state.dataToShowOnModal.localizations && this.state.dataToShowOnModal.localizations.length > 0 && this.state.dataToShowOnModal.localizations.map((locTabs, i) => {\n                                    this.state.currentCode.push(locTabs.id)\n                                    return <Tab key={i + 1} eventKey={i + 1} title={this.getLocaleFullName(locTabs.locale).split(\" \")[0]} style={{ overflowY: \"auto\", height: \"38rem\", overflowX: \"hidden\" }}>\n                                        {renderPanelGroup(this.state.dataToShowOnModalRestTabs)}\n                                    </Tab>\n                                }\n                                )}\n                            </Tabs>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button bsStyle={'primary'} onClick={this.props.onHide}>\n                        <FormattedMessage id='app.ok'/>\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n","import {\n  Col, Grid, PaginationRow, Row\n} from 'patternfly-react';\nimport React, { Component } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { filterContentsByName, getCollectionTypes, getContents } from '../api/Api';\nimport { LASTPAGE, NAME, PAGE, PAGECHANGEVALUE, PAGEINPUT, PAGESIZE, PERPAGEOPTIONS, SEARCH_CONTENT_BY_NAME, SELECT_COLLECTION_TYPE, STRAPI_EXCLUDE_KEYS, TOTALITEMS, T_HEADING, UNIVERSAL_DATE_FORMAT } from '../helper/Constant';\nimport ContentDetailModal from '../ui/ContentDetailModal';\nimport {  FormattedMessage,injectIntl } from \"react-intl\";\nimport { PAGINATION_MESSAGES } from '../helper/Helper';\n\nclass SingleContentList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: PAGE,\n      currPageWillUpdating: PAGE,\n      pageSize: PAGESIZE,\n      totalItems: TOTALITEMS,\n      lastPage: LASTPAGE,\n      pageInput: PAGEINPUT,\n      pageChangeValue: PAGECHANGEVALUE,\n      // Modal State\n      show: false,\n      activeTabKey: 0,\n\n      contentDetailsOnModal: {},\n      searchQuery: '',\n      setSearchBy: '',\n      searchBtnClk: false,\n      // DATA STATE\n      collectionType: [],\n      selectedCollectionType: [],\n      contents: [],\n      selectedContent: null,\n      contentIdForModal: ''\n\n    }\n    this.searchByKey = ''\n  }\n\n  componentDidMount = async () => await this.initSingleContentListPage();\n\n  componentWillUnmount = () => this.shouldShowEtSaveBtn('visible');\n\n  componentDidUpdate = async (prevProps, prevState) => {\n    if (prevProps.selectedCollectionType !== this.props.selectedCollectionType ||\n      prevState.pageSize !== this.state.pageSize && !this.state.searchBtnClk) {\n      this.setState({ page: PAGE, pageInput: PAGE, currPageWillUpdating: PAGE },\n        async () => {\n          await this.doContentSearch();\n        }\n      )\n    }\n    if (prevState.page !== this.state.page && !this.state.searchBtnClk) {\n      // this.setState({ selectedContent: null }); Commented on edit to cache the content/record\n      await this.doContentSearch();\n    }\n  }\n\n  async initSingleContentListPage() {\n    await this.setCollectionTypeState();\n    this.shouldShowEtSaveBtn('hidden');\n    if (this.props.collType && JSON.parse(this.props.collType).length) {\n      this.setState({ selectedCollectionType: JSON.parse(this.props.collType) });\n      await this.getContentsByCollectionType(JSON.parse(this.props.collType)[0].value, this.state.page, this.state.pageSize);\n    }\n  }\n\n  shouldShowEtSaveBtn = (btnVisibility) => {\n    for (let el of document.getElementsByClassName('pull-right save btn btn-primary')) {\n      el.style.visibility = btnVisibility;\n    }\n  }\n\n  async doContentSearch() {\n    if (this.searchByKey && this.state.searchQuery) {\n      const searchResult = await filterContentsByName(\n        this.state.selectedCollectionType[0].value,\n        this.state.searchQuery, this.searchByKey, this.state.page, this.state.pageSize\n      );\n      this.handleStateOnTermSearch(searchResult);\n    } else {\n      await this.getContentsByCollectionType(this.state.selectedCollectionType[0].value, !this.state.page ? PAGE : this.state.page, this.state.pageSize);\n    }\n  }\n\n  async setCollectionTypeState() {\n    const { data: collectionTypeData } = await getCollectionTypes();\n    const collectionTypeApiData = this.filterUidByApiPrefix(collectionTypeData);\n    this.setState({ collectionType: collectionTypeApiData.map(el => ({ label: el.info.displayName, value: el.info.singularName })) });\n  }\n\n  filterUidByApiPrefix = (collectionTypeData) => {\n    return collectionTypeData.filter(el => el.uid.startsWith('api::'))\n  }\n\n  open = async (content) => {\n      this.setState({ show: true, contentDetailsOnModal: content,  contentIdForModal: content && content.id, activeTabKey: 0 })\n  }\n\n  close = () => {\n    this.setState({ show: false })\n  }\n\n  setActiveTabKey = (value) => {\n    this.setState({activeTabKey: value})\n  }\n\n  handleCollectionTypeChange = async (collectionType) => {\n    this.searchByKey = '';\n    this.setState({ contents: [], selectedContent: [] });\n    const collType = collectionType[0]\n    this.setState({ selectedCollectionType: collectionType })\n    if (collType && collType.value) {\n      await this.getContentsByCollectionType(collType.value)\n      this.props.setSelectedContentName(collType.value)\n    } else {\n      this.props.setSelectedContentName(null);\n    }\n    this.setState({ contentIdForModal: undefined, currPageWillUpdating: PAGE });\n  }\n\n  getContentsByCollectionType = async (collectionType, page, pageSize) => {\n    const contentData = await getContents(collectionType, page, pageSize);\n    const seletedContentData = (contentData && contentData.results) && contentData.results.find(content => {\n      if (+content.id === +this.props.selectedContentId) return content\n    });\n    this.setState({\n      selectedContent: seletedContentData,\n      contents: contentData.results,\n      lastPage: contentData.pagination.pageCount,\n      page: contentData.results.length ? contentData.pagination.page : 0,\n      // page: contentData.results.length ? contentData.pagination.page : 0,\n      currPageWillUpdating: contentData.results.length ? contentData.pagination.page : 0,\n      pageSize: contentData.pagination.pageSize,\n      totalItems: contentData.pagination.total,\n    });\n  }\n\n  /**\n   * Renders Button on Typehead.\n   * @returns Button element\n   */\n  renderToggleButton = ({ isMenuShown, onClick }) => (\n    <button\n      type=\"button\"\n      style={{ position: \"absolute\", height: \"100%\", top: \"0px\", right: \"0px\", border: \"1px solid lightgray\" }}\n      onClick={(e) => {\n        e.preventDefault();\n        onClick(e);\n      }}\n    ><span className=\"fa fa-angle-down\"></span></button>\n  );\n\n  changePage(page) {\n    this.setState({ page: page, currPageWillUpdating: page })\n  }\n\n  setPage = value => {\n    const page = Number(value);\n    if (\n      !Number.isNaN(value) &&\n      value !== '' &&\n      page > 0 &&\n      page <= this.totalPages()\n    ) {\n      let newPaginationState = Object.assign({}, this.state.pagination);\n      newPaginationState.page = page;\n      this.setState({ pagination: newPaginationState, pageChangeValue: page });\n    }\n  }\n\n  onContentSearch = async (e) => {\n    e.preventDefault();\n    // collectionType, query, searchBy\n    if (this.state.searchQuery) {\n      const searchResult = await filterContentsByName(\n        this.state.selectedCollectionType[0].value,\n        this.state.searchQuery, this.searchByKey, PAGE, PAGESIZE\n      );\n      this.handleStateOnTermSearch(searchResult);\n    } else {\n      this.getContentsByCollectionType(this.state.selectedCollectionType[0].value)\n    }\n  }\n\n  handleQueryChange = (e) => {\n    e.preventDefault();\n    this.setState({ searchQuery: e.target.value })\n  }\n\n  onPerPageSelect = (pageSize) => {\n    this.setState({ searchBtnClk: false });\n    this.setState({pageSize})\n  }\n\n  onPageInput = e => {\n    this.setState({ currPageWillUpdating: e.target.value })\n  }\n\n  onSubmit = () => {\n    if (+this.state.currPageWillUpdating && this.state.currPageWillUpdating <= this.state.lastPage) {\n      this.setState({ page: +this.state.currPageWillUpdating })\n    }\n  };\n\n  /**\n   * Value to show under Name colum in the table.\n   * Checks if name or title key is present, if yes, fetches its value or fetches any other key's value by excluding some specific keys.\n   * @param {*} content\n   * @returns\n   */\n  fetchTitleOrName = (content) => {\n    if (content) {\n      const keys = Object.keys(content);\n      let index = keys.findIndex(item => 'title' === item.toLowerCase());\n      if (index > -1) {\n        this.searchByKey = Object.keys(content)[index];\n        return content[Object.keys(content)[index]];\n      } else {\n        index = keys.findIndex(item => 'name' === item.toLowerCase());\n        if (index > -1) {\n          this.searchByKey = Object.keys(content)[index];\n          return content[Object.keys(content)[index]];\n        } else {\n          const allowedKeys = keys.filter(item => !STRAPI_EXCLUDE_KEYS.includes(item));\n          if (allowedKeys && allowedKeys.length) {\n            this.searchByKey = allowedKeys[0];\n            return content[allowedKeys[0]];\n          }\n        }\n      }\n    }\n    this.searchByKey = '';\n    return '-';\n  }\n\n  radioButton = (content) => {\n    if (this.state.selectedContent && this.state.selectedContent.id) {\n      return (<input onChange={() => {\n        this.setState({ selectedContent: content })\n      }}\n        type=\"radio\" id={content.id} name=\"content\" value={content.id}\n        defaultChecked={this.state.selectedContent.id === content.id}\n      />)\n    } else {\n      return (<input onChange={() => {\n        this.setState({ selectedContent: content })\n      }}\n        type=\"radio\" id={content + content.id} name=\"content\" value={content.id}\n      />)\n    }\n  };\n\n  onPageNavigation = changePageValue => {this.setState({ searchBtnClk: false }); this.changePage(changePageValue)}\n\n  handleStateOnTermSearch(searchResult) {\n    this.setState({\n      contents: searchResult.results,\n      lastPage: searchResult.pagination.pageCount,\n      page: searchResult.results.length ? searchResult.pagination.page : 0,\n      currPageWillUpdating: searchResult.results.length ? searchResult.pagination.page : 0,\n      pageSize: searchResult.pagination.pageSize,\n      totalItems: searchResult.pagination.total,\n      searchBtnClk: true\n    });\n  }\n\n  saveHandler = () => {\n    this.props.setContent([this.state.selectedContent]);\n    this.props.setCollectionType(this.state.selectedCollectionType);\n    this.props.setTemplateId('default');\n  }\n\n  render() {\n    const pagination = {\n      page: !this.state.page ? 1 : this.state.page,\n      perPage: this.state.pageSize,\n      perPageOptions: PERPAGEOPTIONS,\n    };\n    const itemsStart = this.state.totalItems === 0 ? 0 : ((this.state.page - 1) * this.state.pageSize) + 1;\n    const itemsEnd = Math.min(this.state.page * this.state.pageSize, this.state.totalItems);\n    const saveConfig = this.state.selectedContent && !(Object.keys(this.state.selectedContent).length && this.state.contents.length);\n\n    return (\n      <Grid>\n        <Row className=\"mt-2\">\n          <Col lg={12}>\n            <legend>\n            <FormattedMessage id=\"app.selectContent\" />\n            </legend>\n          </Col>\n        </Row>\n        <Row className=\"mt-2\">\n          <Col lg={3}>\n            <h6><b>{SELECT_COLLECTION_TYPE}</b></h6>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={3}>\n            <Typeahead\n              id=\"collectionTypeDropdown\"\n             // placeholder={SELECT_COLLECTION_TYPE}\n              placeholder={this.props.intl.formatMessage({ id: \"app.chooseAnOption\" })}\n              emptyLabel={this.props.intl.formatMessage({ id: \"app.noMatchesFound\" })}\n              options={this.state.collectionType}\n              onChange={this.handleCollectionTypeChange}\n              selected={this.state.selectedCollectionType}\n            >\n              {({ isMenuShown, toggleMenu }) => (\n                this.renderToggleButton({ isMenuShown, onClick: toggleMenu })\n              )}\n            </Typeahead>\n          </Col>\n        </Row>\n        {\n          Object.keys(this.state.selectedCollectionType).length > 0 &&\n          <>\n            <Row className=\"mt-2\">\n              <Col lg={3}>\n                <h5 style={{ marginBottom: \"0px\" }}><strong>{this.state.selectedCollectionType && this.state.selectedCollectionType[0] && this.state.selectedCollectionType[0].label}</strong></h5>\n              </Col>\n            </Row>\n            <Row>\n              <Col lg={12}>\n                <div\n                  className=\"ContentsFilter well\"\n                  role=\"button\"\n                  tabIndex={0}\n                  style={{ margin: '1rem 0rem' }}\n                >\n                  <form >\n                    <div style={{ display: 'flex', margin: '1rem 0rem' }}>\n                      <button\n                        id=\"dropdown-example\"\n                        role=\"button\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        type=\"button\"\n                        className=\"dropdown-toggle btn btn-default\">{NAME}</button>\n                      <input\n                        type=\"search\"\n                        name=\"name\"\n                        // value={this.state.values.name}\n                        onChange={this.handleQueryChange}\n                        role=\"combobox\"\n                        className=\"rbt-input-main form-control rbt-input\"\n                       // placeholder={SEARCH_CONTENT_BY_NAME}\n                       placeholder={this.props.intl.formatMessage({ id: \"app.result\" })}\n                      />\n                    </div>\n                    <div className=\"pull-right mbt10\" style={{ margin: \"0 0 10px 0\" }} >\n                      <button className=\"btn btn-primary\" onClick={this.onContentSearch}><FormattedMessage id=\"app.search\" /></button>\n                    </div>\n                  </form>\n                </div>\n              </Col>\n            </Row>\n            <Row className=\"mt-2\">\n              <Col lg={12}>\n                <table className=\"table dataTable table-striped table-bordered table-hover\">\n                  <thead>\n                    <tr>\n                      {Object.keys(T_HEADING).map(el => <th key={el}>{T_HEADING[el]}</th>)}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.contents.map(content => {\n                      return (\n                        <tr key={content.id}>\n                          <td width=\"5%\" align=\"center\">\n                            {this.radioButton(content)}\n                          </td>\n                          <td role=\"button\" onClick={() => this.open(content)}>{this.fetchTitleOrName(content)}</td>\n                          <td role=\"button\" onClick={() => this.open(content)}>{`${content.createdBy.firstname} ${content.createdBy.lastname}`}</td>\n                          <td role=\"button\" onClick={() => this.open(content)}>{moment(new Date(content.updatedAt)).format(UNIVERSAL_DATE_FORMAT)}</td>\n                          <td role=\"button\" onClick={() => this.open(content)}>{moment(new Date(content.publishedAt)).format(UNIVERSAL_DATE_FORMAT)}</td>\n                        </tr>)\n                    })}\n                  </tbody>\n                </table>\n                <div className=\"custom-page\"></div>\n                <PaginationRow\n                  itemCount={this.state.totalItems}\n                  itemsStart={itemsStart}\n                  itemsEnd={itemsEnd}\n                  viewType=\"table\"\n                  pagination={pagination}\n                  amountOfPages={!this.state.lastPage ? 1 : this.state.lastPage}\n                  pageInputValue={!this.state.currPageWillUpdating ? 1 : this.state.currPageWillUpdating}\n                  onPageSet={this.changePage}\n                  onPerPageSelect={this.onPerPageSelect}\n                  onFirstPage={() => { this.onPageNavigation(1) }}\n                  onPreviousPage={() => { this.onPageNavigation(!this.state.contents.length ? 1 : this.state.page - 1) }}\n                  onPageInput={this.onPageInput}\n                  onNextPage={() => { this.onPageNavigation(this.state.page + 1) }}\n                  onLastPage={() => { this.onPageNavigation(this.state.lastPage) }}\n                  onSubmit={this.onSubmit}\n                  messages={PAGINATION_MESSAGES(this.props)}\n                />\n              </Col>\n            </Row>\n            <Row className=\"SingleContentConfigFormBody__actionBar row\">\n              <Col sm={9}>\n              </Col>\n              <Col sm={3} className=\"SingleContentConfigFormBody__addButtons\">\n                <Link to=\"/\">\n                  <button className=\"btn-default btn\"><FormattedMessage id=\"app.cancel\" /></button>\n                  <button className=\"btn-primary btn AddContentTypeFormBody__save--btn\" onClick={this.saveHandler} disabled={saveConfig}><FormattedMessage id=\"app.save\" /></button>\n                </Link>\n              </Col>\n            </Row>\n          </>\n        }\n        <ContentDetailModal show={this.state.show} onHide={this.close} contentDetailsOnModal={this.state.contentDetailsOnModal} contentId={this.state.contentIdForModal} \n          collectionType={this.state.selectedCollectionType && this.state.selectedCollectionType.length && this.state.selectedCollectionType[0].value}\n          fetchTitleOrName={this.fetchTitleOrName} activeTabKey={this.state.activeTabKey} setActiveTabKey={this.setActiveTabKey}/>\n      </Grid>\n    )\n  }\n}\n\nexport default injectIntl(SingleContentList);   ","import React, { Component } from 'react';\nimport { IntlProvider } from \"react-intl\";\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport en from \"./en.js\";\nimport it from \"./it.js\";\nimport Config from './page/Config';\nimport SingleContentList from './page/SingleContentList';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedContentId: 0,\n            selectedTemplateId: 'default',\n            selectedContentName: null,\n            name: '',\n            nameTwo: 'nameTwoVar',\n            collectionType: '',\n            locale:'en',\n        };\n    }\n    componentDidMount = () => {\n        this.setLocale();\n        }\n        \n    // TODO: PBCS-54 ~ Need to verify once the mechanism is implemented by Entando Team \n    componentDidUpdate = (prevProps, prevState) => {\n        if (prevProps.config !== this.props.config) {\n            this.setLocale();\n        }\n    }\n\n    setContent = (data) => {\n        if (data.length) this.setState({ selectedContentId: data[0].id })\n    }\n\n    setSelectedContentName = (contentName) => {\n        this.setState({ selectedContentName: contentName, name: contentName, nameTwo: contentName })\n    }\n\n    setTemplateId = (tempId) => {\n        this.setState({ selectedTemplateId: tempId })\n    }\n\n    setCollectionType = (collType) => {\n        this.setState({ collectionType: JSON.stringify(collType) })\n    }\n\n    setLocale = () => {\n        const currLocale = this.props.config && this.props.config.locale;\n        if (currLocale.length) {\n            this.setState({ locale: currLocale });\n        }\n    }\n\n    decideLocale = locale => {\n        if (locale === 'en') { return en }\n        else if (locale === 'it') { return it };\n    }\n\n    render() {\n        return (\n            <IntlProvider locale={this.state.locale} messages={this.decideLocale(this.state.locale)}>\n                <>\n                    <HashRouter>\n                        <Switch>\n                            <Route path='/' exact>\n                                <Config setTemplateId={this.setTemplateId}\n                                    selectedContentName={this.state.selectedContentName}\n                                    collType={this.state.collectionType}\n                                    selectedContentId={this.state.selectedContentId}\n                                    selectedTemplateId={this.state.selectedTemplateId} />\n                            </Route>\n                            <Route path='/singleconfigpage' exact>\n                                <SingleContentList\n                                    setContent={this.setContent}\n                                    setSelectedContentName={this.setSelectedContentName}\n                                    selectedContentId={this.state.selectedContentId}\n                                    setCollectionType={this.setCollectionType}\n                                    collType={this.state.collectionType}\n                                    setTemplateId={this.setTemplateId}\n                                />\n                            </Route>\n                        </Switch>\n                    </HashRouter>\n                </>\n            </IntlProvider>\n        )\n    }\n}\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../App';\n\nclass SingleWidgetElement extends HTMLElement {\n    constructor() {\n        super();\n        this.reactRootRef = React.createRef();\n        this.mountPoint = null;\n    }\n\n    #config = {\n        locale: 'en',\n    }\n\n    #updateConfig(value) {\n        this.#config = JSON.parse(value)\n    }\n\n    static get observedAttributes() {\n        return [\"config\"]\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        this.#updateConfig(newValue)\n        ReactDOM.render(<App ref={this.reactRootRef} config={this.#config} />, this.mountPoint);\n    }\n\n    get config() {\n        return this.reactRootRef.current ? this.reactRootRef.current.state : {};\n    }\n\n    set config(value) {\n        return this.reactRootRef.current.setState(value);\n    }\n\n    connectedCallback() {\n        this.mountPoint = document.createElement('div');\n        this.appendChild(this.mountPoint);\n        ReactDOM.render(<App ref={this.reactRootRef} config={this.#config} />, this.mountPoint);\n    }\n}\n\ncustomElements.get('single-content-widget-config') || customElements.define('single-content-widget-config', SingleWidgetElement);\n\nexport default SingleWidgetElement;\n\n"],"sourceRoot":""}